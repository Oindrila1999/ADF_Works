{
	"name": "unpivot_inline_ds_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorageLS",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorageLS",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "unpivot1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PO as integer,",
				"          Vendor as string,",
				"          Apple as integer,",
				"          Mango as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'adfdemooinadls',",
				"     folderPath: 'input',",
				"     fileName: 'text.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     multiLineRow: true) ~> source1",
				"source1 unpivot(output(",
				"          Fruits as string,",
				"          Amount as integer",
				"     ),",
				"     ungroupBy(Vendor,",
				"          PO),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1",
				"unpivot1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'adfdemooinadls',",
				"     folderPath: 'output',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['unpivot_inline_ds.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Vendor,",
				"          PO,",
				"          Fruits,",
				"          Amount",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}